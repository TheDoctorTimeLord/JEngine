package ru.jengine.battlemodule.core.containers;

import java.util.List;

import javax.annotation.Nullable;

/**
 * Интерфейс, описывающий некоторое хранилище предметов (контейнер). Контейнер должен иметь уникальной, среди других
 * контейнеров, код. Также контейнер обязан проиндексировать все свои предметы. Индексация обязана поддерживать
 * сохранность индекса предмета (если предмет в какой-то момент был доступен по конкретному индексу, то он либо
 * должен всегда сохранять такой индекс, либо контейнер обязан уведомить всех о смене индекса предмета). Контейнеры
 * хранят свои предметы в виде {@link ItemStack}. Добавление предметов в контейнер может быть произвольным (зависит
 * от реализации конкретных контейнеров), главное поддержание неизменности индекса предмета.
 */
public interface ItemContainer {
    /**
     * Получение уникального, среди других контейнеров, кода контейнера
     */
    String getContainerCode();

    /**
     * Получение набора предметов одного типа в виде {@link ItemStack} из контейнера, по индексу
     *
     * @param index индекс набора предметов в контейнере
     * @return набор предметов одного типа, либо null, если по такому индексу предметов в контейнере не найдено
     */
    @Nullable
    ItemStack getItems(int index);

    /**
     * Получение всех предметов в виде {@link ItemStack}, хранящихся в контейнере
     */
    List<ItemStack> getContainedItems();
}
